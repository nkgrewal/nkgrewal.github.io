package  {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import gs.TweenLite;	import flash.display.Shape;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;			public class SalaryMap1a extends MovieClip {				private var usMap:US_Map = new US_Map ();		private var stateArray:Array = new Array () ;		private var bubble:MovieClip = new MovieClip ();				private var stateName:TextField = new TextField ();		private var psychSal:TextField = new TextField ();		private var counsSal:TextField = new TextField ();		private var stateNFormat:TextFormat = new TextFormat ();		private var psychSFormat:TextFormat = new TextFormat ();		private var counsSFormat:TextFormat = new TextFormat ();				private var mapX:int = 3;		private var mapY:int = 100;		private var stateX:int = new int;		private var stateY:int = new int;				private var xmlLoader:URLLoader = new URLLoader ();		public var salaryXML:XML = new XML ();								public function SalaryMap1a () {						addChild ( usMap );			usMap.x=mapX;			usMap.y=mapY;						//loops through usMap object and places children into stateArray			for ( var i:uint = 0; i < usMap.numChildren ; i++ ) {				var tmpState:MovieClip = MovieClip( usMap.getChildAt(i) );				tmpState.addEventListener ( MouseEvent.ROLL_OVER, overState, false, 0, true );				tmpState.addEventListener ( MouseEvent.ROLL_OUT, offState, false, 0, true );				tmpState.alpha = .7;				tmpState.useHandCursor = true;				tmpState.buttonMode = true;								stateArray.push( tmpState );			}						stateArray.sort();						xmlLoader.addEventListener( Event.COMPLETE, processXML );			xmlLoader.load( new URLRequest ( "stateSalaries.xml" ) );						/*for ( var i:uint = 0; i < usMap.numChildren; i++ ) {				trace ('\t|\t ' +i+'.\t name:' + usMap.getChildAt(i).name + '\t type:' + typeof (usMap.getChildAt(i))+ '\t' + usMap.getChildAt(i));			}*/		}				private function processXML( e:Event ):void {			salaryXML = new XML ( e.target.data );		}				private function overState ( e:MouseEvent ) {			// reference object, time (in seconds), { }			var stateText:String = e.target.name.toUpperCase();			stateX = e.target.x;			stateY = e.target.y;						var newStateX:int = e.target.width - e.target.width*1.1;			var newStateY:int = e.target.height - e.target.height*1.1;									TweenLite.to( e.target, .25, { alpha:1, scaleX:.75, scaleY:.75, x:stateX + newStateX, y:stateY + newStateY } );			makeBubble ();			bubble.x = e.target.x;			bubble.y = e.target.y + 20;						stateName.text = stateText;			psychSal.text = "$" + salaryXML.stateinfo.( @name == stateText.toLowerCase() ).psych;			counsSal.text = "$" + salaryXML.stateinfo.( @name == stateText.toLowerCase() ).couns;						stateNFormat.color = 0x8d8d8d;			stateNFormat.size = 14;			stateNFormat.font = "Helvetica";			stateNFormat.bold = true;			stateNFormat.align ="center";						psychSFormat.color = 0x5071CA;			psychSFormat.size = 14;			psychSFormat.font = "Helvetica";			psychSFormat.bold = true;			psychSFormat.align ="center";						counsSFormat.color = 0xD87A00;			counsSFormat.size = 14;			counsSFormat.font = "Helvetica";			counsSFormat.bold = true;			counsSFormat.align ="center";						stateName.setTextFormat(stateNFormat);			psychSal.setTextFormat(psychSFormat);			counsSal.setTextFormat(counsSFormat);			//TweenLite.from( e.target, .5, { alpha: .5, x: -50, onComplete: testFunction, onCompleteParams: [ "monkies" ] } );			//TweenLite.delayedCall( 2, testFunction, [ "zoomba" ] );		}				private function offState ( e:MouseEvent ) {			TweenLite.to( e.target, .25, { alpha:.7, scaleX:.63, scaleY:.63, x:stateX, y:stateY } );			e.target.x=stateX;			e.target.y=stateY;			removeChild(bubble);		}				private function makeBubble () {			var circle:Shape = new Shape ();			var bubbleWidth:uint = 50;						circle.graphics.beginFill( 0xe8e8e8, 1 );			circle.graphics.drawCircle( 50,30,bubbleWidth );			circle.graphics.endFill();						stateName.width=bubbleWidth*2;			psychSal.width=bubbleWidth*2;			counsSal.width=bubbleWidth*2;			stateName.y=0;			psychSal.y=20;			counsSal.y=40;									bubble.mouseEnabled = false;			bubble.mouseChildren = false;			bubble.addChild( circle );			bubble.addChild( stateName );			bubble.addChild( psychSal );			bubble.addChild( counsSal );						addChild( bubble );		}	}}